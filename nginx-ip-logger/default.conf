server {
    listen 80;
    server_name _;

    # Trust known proxy ranges (optional, for completeness)
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    set_real_ip_from 162.158.178.0/23;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;

    # Custom variable to hold the public IP
    set $public_ip $http_x_forwarded_for;

    # Split X-Forwarded-For into parts (Nginx doesnâ€™t natively split, so we approximate)
    set $temp_ip $http_x_forwarded_for;
    # Check if the first IP is private, and if so, try to filter it
    if ($temp_ip ~ "^10\..*") {
        set $public_ip "private-ip-filtered";
    }
    if ($temp_ip ~ "^172\.(1[6-9]|2[0-9]|3[0-1])\..*") {
        set $public_ip "private-ip-filtered";
    }
    if ($temp_ip ~ "^192\.168\..*") {
        set $public_ip "private-ip-filtered";
    }

    # If we can't easily split, use $remote_addr as fallback if public
    if ($public_ip = "private-ip-filtered") {
        set $public_ip $remote_addr;
    }
    if ($remote_addr ~ "^10\..*|^172\.(1[6-9]|2[0-9]|3[0-1])\..*|^192\.168\..*") {
        set $public_ip "unknown-public-ip";
    }

    location / {
        root /usr/share/nginx/html;
        index index.html;
    }

    location /api/ip {
        default_type application/json;
        return 200 "{\"ip\":\"$public_ip\",\"x_forwarded_for\":\"$http_x_forwarded_for\",\"time\":\"$time_local\",\"user_agent\":\"$http_user_agent\"}";
    }
}